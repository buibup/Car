// <auto-generated />
using System;
using Car.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Car.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190408095905_add_CreatedDate")]
    partial class add_CreatedDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Car.Data.EntityModels.Cooperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("AssignDate")
                        .HasColumnName("assign_date");

                    b.Property<string>("BaseModelCode")
                        .HasColumnName("base_model_code");

                    b.Property<string>("CompanyName")
                        .HasColumnName("company_name");

                    b.Property<string>("ContactPerson")
                        .HasColumnName("contact_person");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasColumnName("fax");

                    b.Property<string>("MobilePhoneNo")
                        .HasColumnName("mobile_phone_no");

                    b.Property<int>("ProspectId")
                        .HasColumnName("prospect_id");

                    b.Property<string>("SalesPersonCode")
                        .HasColumnName("sales_person_code");

                    b.Property<int>("SourceId")
                        .HasColumnName("source_id");

                    b.Property<int>("VehicleId")
                        .HasColumnName("vehicle_id");

                    b.HasKey("Id")
                        .HasName("pk_cooperations");

                    b.HasIndex("ProspectId")
                        .HasName("ix_cooperations_prospect_id");

                    b.HasIndex("SourceId")
                        .HasName("ix_cooperations_source_id");

                    b.HasIndex("VehicleId")
                        .HasName("ix_cooperations_vehicle_id");

                    b.ToTable("cooperations");
                });

            modelBuilder.Entity("Car.Data.EntityModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("BranchAt")
                        .HasColumnName("branch_at");

                    b.Property<int?>("CooperationId")
                        .HasColumnName("cooperation_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date");

                    b.Property<string>("CustomerCode")
                        .HasColumnName("customer_code");

                    b.Property<string>("CustomerCodeFrom")
                        .HasColumnName("customer_code_from");

                    b.Property<Guid>("CustomerGuid")
                        .HasColumnName("customer_guid");

                    b.Property<int>("CustomerType")
                        .HasColumnName("customer_type");

                    b.Property<int>("EstablishmentType")
                        .HasColumnName("establishment_type");

                    b.Property<int?>("GovernmentId")
                        .HasColumnName("government_id");

                    b.Property<int?>("PersonalId")
                        .HasColumnName("personal_id");

                    b.Property<string>("TaxIdNo")
                        .HasColumnName("tax_id_no");

                    b.HasKey("Id")
                        .HasName("pk_customers");

                    b.HasIndex("CooperationId")
                        .HasName("ix_customers_cooperation_id");

                    b.HasIndex("GovernmentId")
                        .HasName("ix_customers_government_id");

                    b.HasIndex("PersonalId")
                        .HasName("ix_customers_personal_id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("Car.Data.EntityModels.CustomerGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("NameEn")
                        .HasColumnName("name_en");

                    b.Property<string>("NameTh")
                        .HasColumnName("name_th");

                    b.HasKey("Id")
                        .HasName("pk_customer_groups");

                    b.ToTable("customer_groups");
                });

            modelBuilder.Entity("Car.Data.EntityModels.Government", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("AssignDate")
                        .HasColumnName("assign_date");

                    b.Property<string>("ContactPerson")
                        .HasColumnName("contact_person");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasColumnName("fax");

                    b.Property<string>("MobilePhoneNo")
                        .HasColumnName("mobile_phone_no");

                    b.Property<string>("OrganizationName")
                        .HasColumnName("organization_name");

                    b.Property<int>("ProspectId")
                        .HasColumnName("prospect_id");

                    b.Property<string>("SalesPersonCode")
                        .HasColumnName("sales_person_code");

                    b.Property<int>("SourceId")
                        .HasColumnName("source_id");

                    b.Property<int>("VehicleId")
                        .HasColumnName("vehicle_id");

                    b.HasKey("Id")
                        .HasName("pk_governments");

                    b.HasIndex("ProspectId")
                        .HasName("ix_governments_prospect_id");

                    b.HasIndex("SourceId")
                        .HasName("ix_governments_source_id");

                    b.HasIndex("VehicleId")
                        .HasName("ix_governments_vehicle_id");

                    b.ToTable("governments");
                });

            modelBuilder.Entity("Car.Data.EntityModels.Personal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("AssignDate")
                        .HasColumnName("assign_date");

                    b.Property<string>("BaseModelCode")
                        .HasColumnName("base_model_code");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnName("customer_group_id");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<int>("GenderType")
                        .HasColumnName("gender_type");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name");

                    b.Property<string>("MobilePhoneNo")
                        .HasColumnName("mobile_phone_no");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("ProspectId")
                        .HasColumnName("prospect_id");

                    b.Property<string>("SalesPersonCode")
                        .HasColumnName("sales_person_code");

                    b.Property<int>("SourceId")
                        .HasColumnName("source_id");

                    b.Property<int>("TitleId")
                        .HasColumnName("title_id");

                    b.Property<int>("VehicleId")
                        .HasColumnName("vehicle_id");

                    b.HasKey("Id")
                        .HasName("pk_personals");

                    b.HasIndex("CustomerGroupId")
                        .HasName("ix_personals_customer_group_id");

                    b.HasIndex("ProspectId")
                        .HasName("ix_personals_prospect_id");

                    b.HasIndex("SourceId")
                        .HasName("ix_personals_source_id");

                    b.HasIndex("TitleId")
                        .HasName("ix_personals_title_id");

                    b.HasIndex("VehicleId")
                        .HasName("ix_personals_vehicle_id");

                    b.ToTable("personals");
                });

            modelBuilder.Entity("Car.Data.EntityModels.Prospect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("NameEn")
                        .HasColumnName("name_en");

                    b.Property<string>("NameTh")
                        .HasColumnName("name_th");

                    b.HasKey("Id")
                        .HasName("pk_prospect");

                    b.ToTable("prospect");
                });

            modelBuilder.Entity("Car.Data.EntityModels.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("NameEn")
                        .HasColumnName("name_en");

                    b.Property<string>("NameTh")
                        .HasColumnName("name_th");

                    b.HasKey("Id")
                        .HasName("pk_source");

                    b.ToTable("source");
                });

            modelBuilder.Entity("Car.Data.EntityModels.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_title");

                    b.ToTable("title");
                });

            modelBuilder.Entity("Car.Data.EntityModels.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("NameEn")
                        .HasColumnName("name_en");

                    b.Property<string>("NameTh")
                        .HasColumnName("name_th");

                    b.HasKey("Id")
                        .HasName("pk_vehicle");

                    b.ToTable("vehicle");
                });

            modelBuilder.Entity("Car.Data.EntityModels.Cooperation", b =>
                {
                    b.HasOne("Car.Data.EntityModels.Prospect", "Prospect")
                        .WithMany()
                        .HasForeignKey("ProspectId")
                        .HasConstraintName("fk_cooperations_prospect_prospect_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Car.Data.EntityModels.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("fk_cooperations_source_source_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Car.Data.EntityModels.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("fk_cooperations_vehicle_vehicle_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Car.Data.EntityModels.Customer", b =>
                {
                    b.HasOne("Car.Data.EntityModels.Cooperation", "Cooperation")
                        .WithMany()
                        .HasForeignKey("CooperationId")
                        .HasConstraintName("fk_customers_cooperations_cooperation_id");

                    b.HasOne("Car.Data.EntityModels.Government", "Government")
                        .WithMany()
                        .HasForeignKey("GovernmentId")
                        .HasConstraintName("fk_customers_governments_government_id");

                    b.HasOne("Car.Data.EntityModels.Personal", "Personal")
                        .WithMany()
                        .HasForeignKey("PersonalId")
                        .HasConstraintName("fk_customers_personals_personal_id");
                });

            modelBuilder.Entity("Car.Data.EntityModels.Government", b =>
                {
                    b.HasOne("Car.Data.EntityModels.Prospect", "Prospect")
                        .WithMany()
                        .HasForeignKey("ProspectId")
                        .HasConstraintName("fk_governments_prospect_prospect_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Car.Data.EntityModels.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("fk_governments_source_source_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Car.Data.EntityModels.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("fk_governments_vehicle_vehicle_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Car.Data.EntityModels.Personal", b =>
                {
                    b.HasOne("Car.Data.EntityModels.CustomerGroup", "CustomerGroup")
                        .WithMany()
                        .HasForeignKey("CustomerGroupId")
                        .HasConstraintName("fk_personals_customer_groups_customer_group_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Car.Data.EntityModels.Prospect", "Prospect")
                        .WithMany()
                        .HasForeignKey("ProspectId")
                        .HasConstraintName("fk_personals_prospect_prospect_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Car.Data.EntityModels.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("fk_personals_source_source_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Car.Data.EntityModels.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .HasConstraintName("fk_personals_title_title_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Car.Data.EntityModels.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("fk_personals_vehicle_vehicle_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
